---
- name: Validate server authentication input provided by user
  fail:
    msg: "username/password or cert_file/key_file or auth_token is mandatory"
  when:
    - (username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)

- name: Fail when more than one valid authentication method is provided
  fail:
    msg: "Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token."
  when:
    - ((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or
      ((username is defined or password is defined) and (cert_file is defined or key_file is defined)) or
      ((username is defined or password is defined) and auth_token is defined) or
      ((cert_file is defined or key_file is defined) and auth_token is defined)

- name: Perform firmware upgrade on the server using image uri when username and password are defined
  block:
    - name: Perform firmware upgrade on the server using image uri when username and password are defined
      ilo_firmware:
        category: UpdateService
        command: UpdateFirmwareWithUpload
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
        image_uri: "{{ image_uri }}"
        file_name: "{{ file_name }}"
      register: firmware_upgrade_rsp

    - name: Collecting server IP ,task ID and URL details when username and password are defined
      set_fact:
        server_rsp_details:
          Server: "{{ baseuri }}"
          Tasks:
            ID: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareWithUpload']['msg']['Id'] }}"
            URL: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareWithUpload']['msg']['@odata.id'] }}"

    - name: Firmware upgrade status when username and password are defined
      debug:
        msg: "{{ server_rsp_details }}"

  when: username is defined and password is defined

- name: Perform firmware upgrade on the server using image uri when cert_file and key_file are defined
  block:
    - name: Perform firmware upgrade on the server using image uri when cert_file and key_file are defined
      ilo_firmware:
        category: UpdateService
        command: UpdateFirmwareWithUpload
        baseuri: "{{ baseuri }}"
        cert_file: "{{ cert_file }}"
        key_file: "{{ key_file }}"
        image_uri: "{{ image_uri }}"
        file_name: "{{ file_name }}"
      register: firmware_upgrade_rsp

    - name: Collecting server IP ,task ID and URL details when cert_file and key_file are defined
      set_fact:
        server_rsp_details:
          Server: "{{ baseuri }}"
          Tasks:
            ID: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareWithUpload']['msg']['Id'] }}"
            URL: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareWithUpload']['msg']['@odata.id'] }}"

    - name: Firmware upgrade status when cert_file and key_file are defined
      debug:
        msg: "{{ server_rsp_details }}"

  when: cert_file is defined and key_file is defined

- name: Perform firmware upgrade on the server using image uri when auth_token is defined
  block:
    - name: Perform firmware upgrade on the server using image uri when auth_token is defined
      ilo_firmware:
        category: UpdateService
        command: UpdateFirmwareWithUpload
        baseuri: "{{ baseuri }}"
        auth_token: "{{ auth_token }}"
        image_uri: "{{ image_uri }}"
        file_name: "{{ file_name }}"
      register: firmware_upgrade_rsp

    - name: Collecting server IP ,task ID and URL details when auth_token is defined
      set_fact:
        server_rsp_details:
          Server: "{{ baseuri }}"
          Tasks:
            ID: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareWithUpload']['msg']['Id'] }}"
            URL: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareWithUpload']['msg']['@odata.id'] }}"

    - name: Firmware upgrade status when auth_token is defined
      debug:
        msg: "{{ server_rsp_details }}"

  when: auth_token is defined
